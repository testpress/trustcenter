1:"$Sreact.fragment"
3:I[7555,[],""]
4:I[1295,[],""]
5:I[4873,["874","static/chunks/874-437a265a67d6cfee.js","231","static/chunks/231-1017a615ac90015c.js","745","static/chunks/745-6a389add5fbaeca1.js","316","static/chunks/316-633894f3d37d156e.js","872","static/chunks/app/tls/page-6ce229bf27c23455.js"],"Heading"]
6:I[1571,["874","static/chunks/874-437a265a67d6cfee.js","231","static/chunks/231-1017a615ac90015c.js","745","static/chunks/745-6a389add5fbaeca1.js","316","static/chunks/316-633894f3d37d156e.js","872","static/chunks/app/tls/page-6ce229bf27c23455.js"],"Code"]
7:I[1571,["874","static/chunks/874-437a265a67d6cfee.js","231","static/chunks/231-1017a615ac90015c.js","745","static/chunks/745-6a389add5fbaeca1.js","316","static/chunks/316-633894f3d37d156e.js","872","static/chunks/app/tls/page-6ce229bf27c23455.js"],"Pre"]
31:I[8393,[],""]
:HL["/trustcenter/_next/static/css/0cc1f15a8cbee463.css","style"]
8:T61c,<span><span style="color: var(--shiki-token-comment)"># Test plain HTTP response headers and status</span></span>
<span><span style="color: var(--shiki-token-function)">curl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-v</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">--max-redirs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">http://</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">:80/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">2&gt;&amp;1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">sed</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-n</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1,200p&#39;</span></span>
<span></span>
<span></span>
<span></span>
<span></span>0:{"P":null,"b":"hohebfSNXl0uY5wG0oggj","p":"/trustcenter","c":["","tls",""],"i":false,"f":[[["",{"children":["tls",{"children":["__PAGE__",{}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/trustcenter/_next/static/css/0cc1f15a8cbee463.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],"$L2"]}],{"children":["tls",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":[["$","article",null,{"className":"flex h-full flex-col pt-16 pb-10","children":[["$","div",null,{"className":"flex-auto prose dark:prose-invert [html_:where(&>*)]:mx-auto [html_:where(&>*)]:max-w-2xl lg:[html_:where(&>*)]:mx-[calc(50%-min(50%,var(--container-lg)))] lg:[html_:where(&>*)]:max-w-3xl","children":[["$","div",null,{"className":"absolute inset-0 -z-10 mx-0 max-w-none overflow-hidden","children":["$","div",null,{"className":"absolute top-0 left-1/2 -ml-152 h-100 w-325 dark:mask-[linear-gradient(white,transparent)]","children":[["$","div",null,{"className":"absolute inset-0 bg-linear-to-r from-[#36b49f] to-[#DBFF75] mask-[radial-gradient(farthest-side_at_top,white,transparent)] opacity-40 dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100","children":["$","svg",null,{"aria-hidden":"true","className":"absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5","children":[["$","defs",null,{"children":["$","pattern",null,{"id":"_S_1_","width":72,"height":56,"patternUnits":"userSpaceOnUse","x":-12,"y":4,"children":["$","path",null,{"d":"M.5 56V.5H72","fill":"none"}]}]}],["$","rect",null,{"width":"100%","height":"100%","strokeWidth":0,"fill":"url(#_S_1_)"}],["$","svg",null,{"x":-12,"y":4,"className":"overflow-visible","children":[["$","rect","4-3",{"strokeWidth":"0","width":73,"height":57,"x":288,"y":168}],["$","rect","2-1",{"strokeWidth":"0","width":73,"height":57,"x":144,"y":56}],["$","rect","7-3",{"strokeWidth":"0","width":73,"height":57,"x":504,"y":168}],["$","rect","10-6",{"strokeWidth":"0","width":73,"height":57,"x":720,"y":336}]]}]]}]}],["$","svg",null,{"viewBox":"0 0 1113 440","aria-hidden":"true","className":"absolute top-0 left-1/2 -ml-76 w-278.25 fill-white blur-[26px] dark:hidden","children":["$","path",null,{"d":"M.016 439.5s-9.5-300 434-300S882.516 20 882.516 20V0h230.004v439.5H.016Z"}]}]]}]}],"\n",["$","h1",null,{"children":"TLS (HTTPS) Everywhere"}],"\n",["$","p",null,{"children":"Ensuring all connections to TPStorage endpoints are secure with HTTPS is critical for data confidentiality and integrity. This page contains tests to verify HTTP redirection, certificate validity, and strong TLS configuration."}],"\n",["$","hr",null,{}],"\n",["$","$L5",null,{"level":2,"id":"test-case-tls-01-http-access-should-be-blocked-or-redirect-to-https","children":"Test Case TLS-01 — HTTP access should be blocked or redirect to HTTPS","anchor":false}],"\n",["$","p",null,{"children":[["$","strong",null,{"children":"Purpose:"}],["$","br",null,{}],"\n","Ensure plain HTTP is not used — connections must be HTTPS (either redirect or block)."]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Pre-conditions:"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"TPStorage endpoint (hostname or IP) and public port (usually 80/443) are known."}],"\n",["$","li",null,{"children":"Network access to the endpoint from a test client."}],"\n"]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Tools:"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":[["$","$L6",null,{"children":"curl"}]," (Linux/macOS/WSL)"]}],"\n",["$","li",null,{"children":"Browser (optional)"}],"\n"]}],"\n",["$","p",null,{"children":["$","strong",null,{"children":"Steps:"}]}],"\n",["$","details",null,{"children":[["$","summary",null,{"children":"Show curl commands and steps"}],["$","div",null,{"children":[["$","$L7",null,{"language":"bash","code":"# Test plain HTTP response headers and status\ncurl -v --max-redirs 0 http://<HOST>:80/ 2>&1 | sed -n '1,200p'\n\n\n\n","children":["$","$L6",null,{"className":"language-bash","children":"$8"}]}],"$L9"]}]]}],"\n","$La","\n","$Lb","\n","$Lc","\n","$Ld","\n","$Le","\n","$Lf","\n","$L10","\n","$L11","\n","$L12","\n","$L13","\n","$L14","\n","$L15","\n","$L16","\n","$L17","\n","$L18","\n","$L19","\n","$L1a","\n","$L1b","\n","$L1c","\n","$L1d","\n","$L1e","\n","$L1f","\n","$L20","\n","$L21","\n","$L22","\n","$L23","\n","$L24","\n","$L25","\n","$L26","\n","$L27","\n","$L28","\n","$L29","\n","$L2a","\n","$L2b","\n","$L2c","\n","$L2d"]}],"$L2e"]}],null,"$L2f"]}],{},null,false]},null,false]},null,false],"$L30",false]],"m":"$undefined","G":["$31",[]],"s":false,"S":true}
35:I[6874,["874","static/chunks/874-437a265a67d6cfee.js","231","static/chunks/231-1017a615ac90015c.js","745","static/chunks/745-6a389add5fbaeca1.js","316","static/chunks/316-633894f3d37d156e.js","872","static/chunks/app/tls/page-6ce229bf27c23455.js"],""]
3d:I[5225,["874","static/chunks/874-437a265a67d6cfee.js","231","static/chunks/231-1017a615ac90015c.js","745","static/chunks/745-6a389add5fbaeca1.js","316","static/chunks/316-633894f3d37d156e.js","872","static/chunks/app/tls/page-6ce229bf27c23455.js"],"Feedback"]
3e:I[9665,[],"OutletBoundary"]
40:I[4911,[],"AsyncMetadataOutlet"]
42:I[9665,[],"ViewportBoundary"]
44:I[9665,[],"MetadataBoundary"]
45:"$Sreact.suspense"
9:["$","p",null,{"language":"txt","children":["(Optional) Open in a browser and check if ",["$","$L6",null,{"children":"http://"}]," redirects to ",["$","$L6",null,{"children":"https://"}]," or shows an error."]}]
a:["$","p",null,{"children":["$","strong",null,{"children":"Expected Result:"}]}]
b:["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":"Server must either:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":["Return HTTP 301/302 redirect to ",["$","$L6",null,{"children":"https://<HOST>/"}]," (Location header present), ",["$","strong",null,{"children":"OR"}]]}],"\n",["$","li",null,{"children":"Refuse HTTP connection (403/connection refused), but HTTPS must be available."}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":"No sensitive content is exposed over plain HTTP."}],"\n"]}],"\n"]}]
c:["$","p",null,{"children":[["$","strong",null,{"children":"Actual Result:"}]," ✅ ",["$","strong",null,{"children":"Pass"}]]}]
32:T5ef,curl -v --max-redirs 0 http://storage1.tpstreams.com/ 2>&1 | sed -n '1,200p'

* Host storage1.tpstreams.com:80 was resolved.
* Connected to storage1.tpstreams.com (65.109.153.91) port 80
> GET / HTTP/1.1
> Host: storage1.tpstreams.com
...
< HTTP/1.1 403 Forbidden
< Server: nginx/1.18.0 (Ubuntu)
< Strict-Transport-Security: max-age=31536000; includeSubDomains
...
<Error><Code>AccessDenied</Code><Message>Access Denied.</Message></Error>
```</div>

</details>

---

## Test Case TLS-02 — Verify TLS certificate details and strong cipher suites

**Purpose:**
Confirm the certificate is valid (issuer, subject, expiry) and the server only supports modern TLS (1.2+) and strong ciphers.

**Pre-conditions:**

* HTTPS endpoint reachable (port 443 or configured HTTPS port).

**Tools:**

* `openssl`
* `openssl x509` or `s_client`
* `nmap` with `--script ssl-enum-ciphers` (optional)
* Browser certificate viewer (optional)

**Steps:**

<details>
<summary>Show commands for TLS certificate and cipher check</summary>

<div>
```bash
# Inspect certificate (issuer, validity dates, SANs)
echo | openssl s_client -connect <HOST>:443 -servername <HOST> 2>/dev/null \
  | openssl x509 -noout -issuer -subject -dates -ext subjectAltName

# View full certificate chain
openssl s_client -connect <HOST>:443 -servername <HOST> -showcerts

# Check supported TLS versions and ciphers
nmap --script ssl-enum-ciphers -p 443 <HOST>

# Check for HSTS header (optional)
curl -I https://<HOST>/ | grep -i Strict-Transport-Security || true
33:T4068,<span><span style="color: var(--shiki-token-function)">curl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-v</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">--max-redirs</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">0</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">http://storage1.tpstreams.com/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">2&gt;&amp;1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">sed</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-n</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1,200p&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> Host storage1.tpstreams.com:80 was resolved.</span></span>
<span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-color-text)"> Connected to storage1.tpstreams.com (</span><span style="color: var(--shiki-token-function)">65.109.153.91</span><span style="color: var(--shiki-color-text)">) port 80</span></span>
<span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> GET / HTTP/1.1</span></span>
<span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> Host: storage1.tpstreams.com</span></span>
<span><span style="color: var(--shiki-token-function)">...</span></span>
<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> HTTP/1.1 403 Forbidden</span></span>
<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> Server: nginx/1.18.0 (</span><span style="color: var(--shiki-token-function)">Ubuntu</span><span style="color: var(--shiki-color-text)">)</span></span>
<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)"> Strict-Transport-Security: max-age=31536000; </span><span style="color: var(--shiki-token-function)">includeSubDomains</span></span>
<span><span style="color: var(--shiki-token-function)">...</span></span>
<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">Error&gt;&lt;Code</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">AccessDenied</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">/Code&gt;&lt;Message</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)">Access Denied.</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-color-text)">/Message&gt;&lt;/Error</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-token-string-expression)">```</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string-expression)">/div</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string-expression)">/details</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">---</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)">## Test Case TLS-02 — Verify TLS certificate details and strong cipher suites</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">**</span><span style="color: var(--shiki-token-string-expression)">Purpose:</span><span style="color: var(--shiki-token-keyword)">**</span></span>
<span><span style="color: var(--shiki-token-function)">Confirm</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">the</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">certificate</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">is</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">valid</span><span style="color: var(--shiki-token-string-expression)"> (issuer, </span><span style="color: var(--shiki-token-string)">subject,</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">expiry</span><span style="color: var(--shiki-token-string-expression)">) and the server only supports modern TLS (</span><span style="color: var(--shiki-token-function)">1.2+</span><span style="color: var(--shiki-token-string-expression)">) and strong ciphers.</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">**</span><span style="color: var(--shiki-token-string-expression)">Pre-conditions:</span><span style="color: var(--shiki-token-keyword)">**</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-string-expression)"> HTTPS endpoint reachable (</span><span style="color: var(--shiki-token-function)">port</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-constant)">443</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">or</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">configured</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">HTTPS</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">port</span><span style="color: var(--shiki-token-string-expression)">).</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">**</span><span style="color: var(--shiki-token-string-expression)">Tools:</span><span style="color: var(--shiki-token-keyword)">**</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-string-expression)"> `</span><span style="color: var(--shiki-token-function)">openssl</span><span style="color: var(--shiki-token-string-expression)">`</span></span>
<span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-string-expression)"> `</span><span style="color: var(--shiki-token-function)">openssl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">x509</span><span style="color: var(--shiki-token-string-expression)">` </span><span style="color: var(--shiki-token-function)">or</span><span style="color: var(--shiki-token-string-expression)"> `</span><span style="color: var(--shiki-token-function)">s_client</span><span style="color: var(--shiki-token-string-expression)">`</span></span>
<span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-string-expression)"> `</span><span style="color: var(--shiki-token-function)">nmap</span><span style="color: var(--shiki-token-string-expression)">` </span><span style="color: var(--shiki-token-function)">with</span><span style="color: var(--shiki-token-string-expression)"> `</span><span style="color: var(--shiki-token-function)">--script</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">ssl-enum-ciphers</span><span style="color: var(--shiki-token-string-expression)">` (</span><span style="color: var(--shiki-token-function)">optional</span><span style="color: var(--shiki-token-string-expression)">)</span></span>
<span><span style="color: var(--shiki-token-keyword)">*</span><span style="color: var(--shiki-token-string-expression)"> Browser certificate viewer (</span><span style="color: var(--shiki-token-function)">optional</span><span style="color: var(--shiki-token-string-expression)">)</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">**</span><span style="color: var(--shiki-token-string-expression)">Steps:</span><span style="color: var(--shiki-token-keyword)">**</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string-expression)">details</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string-expression)">summary</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string-expression)">Show commands </span><span style="color: var(--shiki-token-keyword)">for</span><span style="color: var(--shiki-token-string-expression)"> TLS certificate and cipher check</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string-expression)">/summary</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string-expression)">div</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span><span style="color: var(--shiki-token-string-expression)">```</span><span style="color: var(--shiki-token-function)">bash</span></span>
<span><span style="color: var(--shiki-token-comment)"># Inspect certificate (issuer, validity dates, SANs)</span></span>
<span><span style="color: var(--shiki-token-function)">echo</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">openssl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">s_client</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-connect</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">:443</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-servername</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">2&gt;</span><span style="color: var(--shiki-token-string)">/dev/null</span><span style="color: var(--shiki-color-text)"> \</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">openssl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">x509</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-noout</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-issuer</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-subject</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-dates</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-ext</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">subjectAltName</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)"># View full certificate chain</span></span>
<span><span style="color: var(--shiki-token-function)">openssl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">s_client</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-connect</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">:443</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-servername</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-showcerts</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)"># Check supported TLS versions and ciphers</span></span>
<span><span style="color: var(--shiki-token-function)">nmap</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">--script</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">ssl-enum-ciphers</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-p</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-constant)">443</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)"># Check for HSTS header (optional)</span></span>
<span><span style="color: var(--shiki-token-function)">curl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-I</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">https://</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">grep</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-i</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">Strict-Transport-Security</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">true</span></span>
<span></span>d:["$","details",null,{"children":[["$","summary",null,{"children":"Show actual curl output"}],["$","div",null,{"children":[["$","$L7",null,{"language":"bash","code":"$32","children":["$","$L6",null,{"className":"language-bash","children":"$33"}]}],"$L34"]}]]}]
e:["$","p",null,{"children":["$","strong",null,{"children":"Expected Result:"}]}]
f:["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Certificate:"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Issuer = valid CA (Let's Encrypt, customer CA, or internal trusted CA)."}],"\n",["$","li",null,{"language":"txt","children":[["$","$L6",null,{"children":"Not Before"}]," / ",["$","$L6",null,{"children":"Not After"}]," dates indicate certificate is currently valid."]}],"\n",["$","li",null,{"children":"Subject / SAN includes the hostname clients use."}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Cipher/TLS policy:"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"TLS 1.2 and TLS 1.3 supported; TLS 1.0 and 1.1 disabled."}],"\n",["$","li",null,{"language":"txt","children":["Only strong ciphers offered (AEAD ciphers like ",["$","$L6",null,{"children":"TLS_AES_128_GCM_SHA256"}],", ECDHE suites). No RC4, DES, or export ciphers."]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"HSTS header:"}]," Present for the domain (recommended)."]}],"\n"]}],"\n"]}]
10:["$","p",null,{"children":[["$","strong",null,{"children":"Actual Result:"}]," ✅ ",["$","strong",null,{"children":"Pass"}]]}]
11:["$","details",null,{"children":[["$","summary",null,{"children":"Show SSL Labs result"}],["$","div",null,{"children":["$","p",null,{"children":["$","$L35",null,{"href":"https://www.ssllabs.com/ssltest/analyze.html?d=storage1.tpstreams.com","children":"SSL Labs Report"}]}]}]]}]
12:["$","hr",null,{}]
13:["$","$L5",null,{"level":2,"id":"test-case-tls-03-weak-tls-protocols-should-be-rejected-tls-1-0-tls-1-1","children":"Test Case TLS-03 — Weak TLS protocols should be rejected (TLS 1.0 / TLS 1.1)"}]
14:["$","p",null,{"children":[["$","strong",null,{"children":"Purpose:"}],["$","br",null,{}],"\n","Verify the server rejects old and insecure TLS versions."]}]
15:["$","p",null,{"children":["$","strong",null,{"children":"Pre-conditions:"}]}]
16:["$","ul",null,{"children":["\n",["$","li",null,{"children":"HTTPS endpoint reachable."}],"\n"]}]
17:["$","p",null,{"children":["$","strong",null,{"children":"Tools:"}]}]
18:["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":[["$","$L6",null,{"children":"openssl"}]," (client)"]}],"\n",["$","li",null,{"language":"txt","children":[["$","$L6",null,{"children":"testssl.sh"}]," or ",["$","$L6",null,{"children":"nmap"}]," (optional)"]}],"\n"]}]
19:["$","p",null,{"children":["$","strong",null,{"children":"Steps:"}]}]
36:T1fd9,<span><span style="color: var(--shiki-token-comment)"># Test TLS 1.0</span></span>
<span><span style="color: var(--shiki-token-function)">openssl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">s_client</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-connect</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">:443</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-servername</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-tls1</span><span style="color: var(--shiki-color-text)"> \</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">2&gt;&amp;1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">sed</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-n</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1,200p&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)"># Test TLS 1.1</span></span>
<span><span style="color: var(--shiki-token-function)">openssl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">s_client</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-connect</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">:443</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-servername</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-tls1_1</span><span style="color: var(--shiki-color-text)"> \</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">2&gt;&amp;1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">sed</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-n</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1,200p&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)"># Test TLS 1.2 and TLS 1.3 to confirm modern versions work</span></span>
<span><span style="color: var(--shiki-token-function)">openssl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">s_client</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-connect</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">:443</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-servername</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-tls1_2</span><span style="color: var(--shiki-color-text)"> \</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">2&gt;&amp;1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">sed</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-n</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1,200p&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-function)">openssl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">s_client</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-connect</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">:443</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-servername</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-tls1_3</span><span style="color: var(--shiki-color-text)"> \</span></span>
<span><span style="color: var(--shiki-color-text)">  </span><span style="color: var(--shiki-token-keyword)">2&gt;&amp;1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">sed</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-n</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1,200p&#39;</span></span>
<span></span>
<span><span style="color: var(--shiki-token-comment)"># Optional: Use testssl.sh to get full compatibility matrix</span></span>
<span><span style="color: var(--shiki-token-function)">./testssl.sh</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">:443</span></span>
<span></span>1a:["$","details",null,{"children":[["$","summary",null,{"children":"Show commands to test TLS versions"}],["$","div",null,{"children":["$","$L7",null,{"language":"bash","code":"# Test TLS 1.0\nopenssl s_client -connect <HOST>:443 -servername <HOST> -tls1 \\\n  2>&1 | sed -n '1,200p'\n\n# Test TLS 1.1\nopenssl s_client -connect <HOST>:443 -servername <HOST> -tls1_1 \\\n  2>&1 | sed -n '1,200p'\n\n# Test TLS 1.2 and TLS 1.3 to confirm modern versions work\nopenssl s_client -connect <HOST>:443 -servername <HOST> -tls1_2 \\\n  2>&1 | sed -n '1,200p'\n\nopenssl s_client -connect <HOST>:443 -servername <HOST> -tls1_3 \\\n  2>&1 | sed -n '1,200p'\n\n# Optional: Use testssl.sh to get full compatibility matrix\n./testssl.sh <HOST>:443\n","children":["$","$L6",null,{"className":"language-bash","children":"$36"}]}]}]]}]
1b:["$","p",null,{"children":["$","strong",null,{"children":"Expected Result:"}]}]
1c:["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":[["$","$L6",null,{"children":"openssl"}]," attempts for ",["$","$L6",null,{"children":"-tls1"}]," and ",["$","$L6",null,{"children":"-tls1_1"}]," should fail to negotiate a session (e.g., ",["$","$L6",null,{"children":"handshake failure"}]," or ",["$","$L6",null,{"children":"no shared cipher"}],")."]}],"\n",["$","li",null,{"language":"txt","children":[["$","$L6",null,{"children":"-tls1_2"}]," and ",["$","$L6",null,{"children":"-tls1_3"}]," should succeed if the client supports them."]}],"\n",["$","li",null,{"children":"No successful connection using TLS 1.0/1.1."}],"\n"]}]
1d:["$","p",null,{"children":[["$","strong",null,{"children":"Actual Result:"}]," ✅ Pass"]}]
1e:["$","details",null,{"children":[["$","summary",null,{"children":"Show test output / screenshot"}],["$","div",null,{"children":["$","p",null,{"children":["$","img",null,{"src":"/api/attachments.redirect?id=24af23f7-ff15-4cf5-8c8a-3a28834e3230","alt":"TLS 1.0/1.1 Rejection Result"}]}]}]]}]
1f:["$","hr",null,{}]
20:["$","$L5",null,{"level":2,"id":"test-case-tls-04-mitm-interception-should-be-prevented-proxy-testing","children":"Test Case TLS-04 — MITM interception should be prevented (proxy testing)"}]
21:["$","p",null,{"children":[["$","strong",null,{"children":"Purpose:"}],"\nConfirm HTTPS prevents interception and that clients/browsers warn when presented with an untrusted intermediary certificate. Also verify HSTS is present to reduce downgrade risk."]}]
22:["$","p",null,{"children":["$","strong",null,{"children":"Pre-conditions"}]}]
23:["$","ul",null,{"children":["\n",["$","li",null,{"children":"Test environment where you can safely run an interception proxy (dedicated test VM or lab)."}],"\n",["$","li",null,{"children":"TPStorage is reachable from the test client."}],"\n",["$","li",null,{"children":"You must only perform MITM testing on systems you own or are explicitly authorized to test."}],"\n"]}]
24:["$","p",null,{"children":["$","strong",null,{"children":"Tools"}]}]
25:["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":[["$","$L6",null,{"children":"mitmproxy"}]," or Burp Suite (interception)"]}],"\n",["$","li",null,{"language":"txt","children":["Browser or ",["$","$L6",null,{"children":"curl"}]," configured to use a proxy"]}],"\n",["$","li",null,{"children":["(Optional) Access to a test VM's certificate store if you want to simulate a trusted proxy — ",["$","strong",null,{"children":"do not install untrusted CA certs on production clients."}]]}],"\n"]}]
26:["$","p",null,{"children":["$","strong",null,{"children":"Steps"}]}]
37:T499,<span><span style="color: var(--shiki-token-function)">curl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-I</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">https://</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">2&gt;&amp;1</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">sed</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-n</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">&#39;1,200p&#39;</span></span>
<span></span>27:["$","details",null,{"children":[["$","summary",null,{"children":"Show test steps & commands"}],["$","div",null,{"children":[["$","ol",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Baseline (no proxy)"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":["From a browser or ",["$","$L6",null,{"children":"curl"}],", access ",["$","$L6",null,{"children":"https://<HOST>/"}]," and confirm a normal HTTPS connection:"]}],"\n"]}],"\n",["$","$L7",null,{"language":"bash","code":"curl -I https://<HOST>/ 2>&1 | sed -n '1,200p'\n","children":["$","$L6",null,{"className":"language-bash","children":"$37"}]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"Attempt interception without trusting proxy CA (safe test)"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Start mitmproxy (default listens on 8080):"}],"\n"]}],"\n",["$","$L7",null,{"language":"bash","code":"mitmproxy --mode regular --listen-port 8080\n","children":["$","$L6",null,{"className":"language-bash","children":"<span><span style=\"color: var(--shiki-token-function)\">mitmproxy</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">--mode</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">regular</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">--listen-port</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-constant)\">8080</span></span>\n<span></span>"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":["Configure browser or ",["$","$L6",null,{"children":"curl"}]," to use the proxy but ",["$","strong",null,{"children":"do not"}]," install mitmproxy’s CA cert into the browser/system. For ",["$","$L6",null,{"children":"curl"}],":"]}],"\n"]}],"\n",["$","$L7",null,{"language":"bash","code":"curl -x http://127.0.0.1:8080 https://<HOST>/ -v\n","children":["$","$L6",null,{"className":"language-bash","children":"<span><span style=\"color: var(--shiki-token-function)\">curl</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">-x</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">http://127.0.0.1:8080</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">https://</span><span style=\"color: var(--shiki-token-keyword)\">&lt;</span><span style=\"color: var(--shiki-token-string)\">HOS</span><span style=\"color: var(--shiki-color-text)\">T</span><span style=\"color: var(--shiki-token-keyword)\">&gt;</span><span style=\"color: var(--shiki-token-string)\">/</span><span style=\"color: var(--shiki-color-text)\"> </span><span style=\"color: var(--shiki-token-string)\">-v</span></span>\n<span></span>"}]}],"\n","$L38","\n"]}],"\n","$L39","\n","$L3a","\n"]}],"$L3b"]}]]}]
28:["$","p",null,{"children":["$","strong",null,{"children":"Expected Result"}]}]
29:["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["With proxy CA ",["$","strong",null,{"children":"not trusted"}]," by the client:"]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"Browser displays a certificate error and refuses to load content."}],"\n",["$","li",null,{"language":"txt","children":[["$","$L6",null,{"children":"curl"}]," fails TLS verification unless ",["$","$L6",null,{"children":"-k"}],"/",["$","$L6",null,{"children":"--insecure"}]," is used."]}],"\n"]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":["With proxy CA ",["$","strong",null,{"children":"trusted"}]," (test VM only), interception will succeed — this demonstrates why protecting client root stores is critical."]}],"\n"]}],"\n",["$","li",null,{"children":["\n",["$","p",null,{"children":"HSTS header present reduces the risk of downgrade attacks."}],"\n"]}],"\n"]}]
2a:["$","p",null,{"children":[["$","strong",null,{"children":"Actual Result:"}]," ✅ Pass"]}]
3c:T24ee,<span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Test</span><span style="color: var(--shiki-color-text)">                        </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Expected</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">Result</span><span style="color: var(--shiki-color-text)">                  </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Actual</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">Result</span><span style="color: var(--shiki-color-text)">                                                                                </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Status</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span></span>
<span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">---------------------------</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">--------------------------------</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">--------------------------------------------------------------------------------------------</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">------</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span></span>
<span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">HTTPS</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">baseline</span><span style="color: var(--shiki-color-text)">              </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TLS</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">handshake</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">succeeds</span><span style="color: var(--shiki-color-text)">           </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">TLS</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">handshake</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">succeeds</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-token-function)">400</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">Bad</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">Request</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">not</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">critical</span><span style="color: var(--shiki-color-text)">)                                      </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">PASS</span><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-keyword)">|</span></span>
<span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">MITM</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">proxy</span><span style="color: var(--shiki-color-text)"> (CA </span><span style="color: var(--shiki-token-string)">not</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">trusted</span><span style="color: var(--shiki-color-text)">) </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Connection</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">rejected</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">cert</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">error</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">curl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">fails</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">with</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-token-function)">SSL</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">certificate</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">problem:</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">unable</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">to</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">get</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">local</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">issuer</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">certificate</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">            </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">PASS</span><span style="color: var(--shiki-color-text)">   </span><span style="color: var(--shiki-token-keyword)">|</span></span>
<span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">HSTS</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">header</span><span style="color: var(--shiki-color-text)">                 </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Present</span><span style="color: var(--shiki-color-text)">                          </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">Verified</span><span style="color: var(--shiki-color-text)"> (</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-token-function)">Strict-Transport-Security:</span><span style="color: var(--shiki-token-string-expression)"> </span><span style="color: var(--shiki-token-string)">max-age=</span><span style="color: var(--shiki-token-constant)">31536000</span><span style="color: var(--shiki-token-string-expression)">; </span><span style="color: var(--shiki-token-function)">includeSubDomains</span><span style="color: var(--shiki-token-string-expression)">`</span><span style="color: var(--shiki-color-text)">)                  | PASS   |</span></span>
<span></span>2b:["$","$L7",null,{"language":"bash","code":"| Test                        | Expected Result                  | Actual Result                                                                                | Status |\n| --------------------------- | -------------------------------- | -------------------------------------------------------------------------------------------- | ------ |\n| HTTPS baseline              | TLS handshake succeeds           | TLS handshake succeeds (`400 Bad Request` not critical)                                      | PASS   |\n| MITM proxy (CA not trusted) | Connection rejected / cert error | curl fails with `SSL certificate problem: unable to get local issuer certificate`            | PASS   |\n| HSTS header                 | Present                          | Verified (`Strict-Transport-Security: max-age=31536000; includeSubDomains`)                  | PASS   |\n","children":["$","$L6",null,{"className":"language-bash","children":"$3c"}]}]
2c:["$","p",null,{"children":["$","strong",null,{"children":"Notes / Remediation"}]}]
2d:["$","ul",null,{"children":["\n",["$","li",null,{"children":"Never install untrusted CA certificates on production or user machines. Limit testing to isolated VMs."}],"\n",["$","li",null,{"children":"If clients accept the proxy CA unexpectedly, audit client trust stores and remove unauthorized root certs."}],"\n",["$","li",null,{"language":"txt","children":["Ensure ",["$","$L6",null,{"children":"Strict-Transport-Security"}]," is set with an appropriate ",["$","$L6",null,{"children":"max-age"}]," and ",["$","$L6",null,{"children":"includeSubDomains"}]," as needed to reduce downgrade risk."]}],"\n",["$","li",null,{"children":"If interception succeeds on production clients without a trusted CA, investigate client compromise or improper trust store configuration immediately."}],"\n"]}]
2e:["$","footer",null,{"className":"mx-auto mt-16 w-full max-w-2xl lg:max-w-5xl","children":["$","$L3d",null,{}]}]
2f:["$","$L3e",null,{"children":["$L3f",["$","$L40",null,{"promise":"$@41"}]]}]
30:["$","$1","h",{"children":[null,[["$","$L42",null,{"children":"$L43"}],null],["$","$L44",null,{"children":["$","div",null,{"hidden":true,"children":["$","$45",null,{"fallback":null,"children":"$L46"}]}]}]]}]
34:["$","p",null,{"children":"(Optional) Inspect certificate in browser (click padlock → certificate)."}]
38:["$","ul",null,{"children":["\n",["$","li",null,{"children":["\n",["$","p",null,{"children":"Try to visit the HTTPS site:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"language":"txt","children":[["$","strong",null,{"children":"Expected:"}]," Browser shows an HTTPS certificate error/warning (untrusted issuer). ",["$","$L6",null,{"children":"curl"}]," shows an SSL/TLS verification error (e.g., ",["$","$L6",null,{"children":"SSL certificate problem: unable to get local issuer certificate"}]," or ",["$","$L6",null,{"children":"SSL: certificate subject name ..."}],")."]}],"\n"]}],"\n"]}],"\n"]}]
39:["$","li",null,{"children":["\n",["$","p",null,{"children":["$","strong",null,{"children":"(Optional) Interception with trusted proxy CA — controlled simulation only"}]}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":"In a disposable test VM, install mitmproxy CA into the trust store, then repeat the request through the proxy. The proxy will be able to decrypt/inspect traffic. This simulates a client that trusts a malicious/compromised CA — use only in an isolated lab."}],"\n"]}],"\n"]}]
3a:["$","li",null,{"children":["\n",["$","p",null,{"children":[["$","strong",null,{"children":"Check HSTS header"}]," (see TLS-02):"]}],"\n"]}]
47:T500,<span><span style="color: var(--shiki-token-function)">curl</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-I</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">https://</span><span style="color: var(--shiki-token-keyword)">&lt;</span><span style="color: var(--shiki-token-string)">HOS</span><span style="color: var(--shiki-color-text)">T</span><span style="color: var(--shiki-token-keyword)">&gt;</span><span style="color: var(--shiki-token-string)">/</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">|</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">grep</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">-i</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-string)">Strict-Transport-Security</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-keyword)">||</span><span style="color: var(--shiki-color-text)"> </span><span style="color: var(--shiki-token-function)">true</span></span>
<span></span>3b:["$","$L7",null,{"language":"bash","code":"curl -I https://<HOST>/ | grep -i Strict-Transport-Security || true\n","children":["$","$L6",null,{"className":"language-bash","children":"$47"}]}]
43:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
3f:null
48:I[8175,[],"IconMark"]
41:{"metadata":[["$","title","0",{"children":"Security Tests — TLS / HTTPS Enforcement - Protocol API Reference"}],["$","meta","1",{"name":"description","content":"Ensure all TPStorage endpoints enforce HTTPS, have valid TLS certificates, and support strong ciphers (TLS 1.2+)."}],["$","link","2",{"rel":"icon","href":"/trustcenter/favicon.ico","type":"image/x-icon","sizes":"48x48"}],["$","$L48","3",{}]],"error":null,"digest":"$undefined"}
46:"$41:metadata"
49:I[881,["874","static/chunks/874-437a265a67d6cfee.js","231","static/chunks/231-1017a615ac90015c.js","745","static/chunks/745-6a389add5fbaeca1.js","63","static/chunks/63-bb366aa745fec7a9.js","700","static/chunks/700-80a87c3c5c92b311.js","316","static/chunks/316-633894f3d37d156e.js","177","static/chunks/app/layout-32a9f35deeb658a8.js"],"Providers"]
4a:I[896,["874","static/chunks/874-437a265a67d6cfee.js","231","static/chunks/231-1017a615ac90015c.js","745","static/chunks/745-6a389add5fbaeca1.js","63","static/chunks/63-bb366aa745fec7a9.js","700","static/chunks/700-80a87c3c5c92b311.js","316","static/chunks/316-633894f3d37d156e.js","177","static/chunks/app/layout-32a9f35deeb658a8.js"],"Layout"]
2:["$","html",null,{"lang":"en","className":"h-full","suppressHydrationWarning":true,"children":["$","body",null,{"className":"flex min-h-full bg-white antialiased dark:bg-zinc-900","children":["$","$L49",null,{"children":["$","div",null,{"className":"w-full","children":["$","$L4a",null,{"allSections":{"/":[{"title":"Testing","id":"testing"},{"title":"Getting started","id":"getting-started"}],"/attachments":[{"title":"The attachment model","id":"the-attachment-model"},{"title":"List all attachments","id":"list-all-attachments","tag":"GET","label":"/v1/attachments"},{"title":"Create an attachment","id":"create-an-attachment","tag":"POST","label":"/v1/attachments"},{"title":"Retrieve an attachment","id":"retrieve-an-attachment","tag":"GET","label":"/v1/attachments/:id"},{"title":"Update an attachment","id":"update-an-attachment","tag":"PUT","label":"/v1/attachments/:id"},{"title":"Delete an attachment","id":"delete-an-attachment","tag":"DELETE","label":"/v1/attachments/:id"}],"/authentication":[{"title":"Basic authentication","id":"basic-authentication"},{"title":"OAuth2 with bearer token","id":"o-auth2-with-bearer-token"},{"title":"Using an SDK","id":"using-an-sdk"}],"/conversations":[{"title":"The conversation model","id":"the-conversation-model"},{"title":"List all conversations","id":"list-all-conversations","tag":"GET","label":"/v1/conversations"},{"title":"Create a conversation","id":"create-a-conversation","tag":"POST","label":"/v1/conversations"},{"title":"Retrieve a conversation","id":"retrieve-a-conversation","tag":"GET","label":"/v1/conversations/:id"},{"title":"Update a conversation","id":"update-a-conversation","tag":"PUT","label":"/v1/conversations/:id"},{"title":"Delete a conversation","id":"delete-a-conversation","tag":"DELETE","label":"/v1/conversations/:id"}],"/errors":[{"title":"Status codes","id":"status-codes"},{"title":"Error types","id":"error-types"}],"/messages":[{"title":"The message model","id":"the-message-model"},{"title":"List all messages","id":"list-all-messages","tag":"GET","label":"/v1/messages"},{"title":"Send a message","id":"send-a-message","tag":"POST","label":"/v1/messages"},{"title":"Retrieve a message","id":"retrieve-a-message","tag":"GET","label":"/v1/messages/:id"},{"title":"Update a message","id":"update-a-message","tag":"PUT","label":"/v1/messages/:id"},{"title":"Delete a message","id":"delete-a-message","tag":"DELETE","label":"/v1/messages/:id"}],"/contacts":[{"title":"The contact model","id":"the-contact-model"},{"title":"List all contacts","id":"list-all-contacts","tag":"GET","label":"/v1/contacts"},{"title":"Create a contact","id":"create-a-contact","tag":"POST","label":"/v1/contacts"},{"title":"Retrieve a contact","id":"retrieve-a-contact","tag":"GET","label":"/v1/contacts/:id"},{"title":"Update a contact","id":"update-a-contact","tag":"PUT","label":"/v1/contacts/:id"},{"title":"Delete a contact","id":"delete-a-contact","tag":"DELETE","label":"/v1/contacts/:id"}],"/private-network-endpoints":[{"title":"Test Case PNE-01 — Attempt connection from unauthorized IP should be blocked by firewall","id":"test-case-pne-01-attempt-connection-from-unauthorized-ip-should-be-blocked-by-firewall"},{"title":"Test Case PNE-02 — Verify allowed IPs / subnets can access TPStorage","id":"test-case-pne-02-verify-allowed-ips-subnets-can-access-tp-storage"}],"/pagination":[{"title":"Example using cursors","id":"example-using-cursors"}],"/quickstart":[{"title":"Choose your client","id":"choose-your-client"},{"title":"Making your first API request","id":"making-your-first-api-request"},{"title":"What's next?","id":"whats-next"}],"/groups":[{"title":"The group model","id":"the-group-model"},{"title":"List all groups","id":"list-all-groups","tag":"GET","label":"/v1/groups"},{"title":"Create a group","id":"create-a-group","tag":"POST","label":"/v1/groups"},{"title":"Retrieve a group","id":"retrieve-a-group","tag":"GET","label":"/v1/groups/:id"},{"title":"Update a group","id":"update-a-group","tag":"PUT","label":"/v1/groups/:id"},{"title":"Delete a group","id":"delete-a-group","tag":"DELETE","label":"/v1/groups/:id"}],"/sdks":[{"title":"Official libraries","id":"official-libraries"}],"/webhooks":[{"title":"Registering webhooks","id":"registering-webhooks"},{"title":"Consuming webhooks","id":"consuming-webhooks"},{"title":"Event types","id":"event-types"},{"title":"Security","id":"security"}],"/tls":[{"title":"Test Case TLS-01 — HTTP access should be blocked or redirect to HTTPS","id":"test-case-tls-01-http-access-should-be-blocked-or-redirect-to-https","anchor":false},{"title":"Test Case TLS-03 — Weak TLS protocols should be rejected (TLS 1.0 / TLS 1.1)","id":"test-case-tls-03-weak-tls-protocols-should-be-rejected-tls-1-0-tls-1-1"},{"title":"Test Case TLS-04 — MITM interception should be prevented (proxy testing)","id":"test-case-tls-04-mitm-interception-should-be-prevented-proxy-testing"}]},"children":"$L4b"}]}]}]}]}]
4b:["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","div",null,{"className":"absolute inset-0 -z-10 mx-0 max-w-none overflow-hidden","children":["$","div",null,{"className":"absolute top-0 left-1/2 -ml-152 h-100 w-325 dark:mask-[linear-gradient(white,transparent)]","children":[["$","div",null,{"className":"absolute inset-0 bg-linear-to-r from-[#36b49f] to-[#DBFF75] mask-[radial-gradient(farthest-side_at_top,white,transparent)] opacity-40 dark:from-[#36b49f]/30 dark:to-[#DBFF75]/30 dark:opacity-100","children":["$","svg",null,{"aria-hidden":"true","className":"absolute inset-x-0 inset-y-[-50%] h-[200%] w-full skew-y-[-18deg] fill-black/40 stroke-black/50 mix-blend-overlay dark:fill-white/2.5 dark:stroke-white/5","children":[["$","defs",null,{"children":["$","pattern",null,{"id":"_S_2_","width":72,"height":56,"patternUnits":"userSpaceOnUse","x":-12,"y":4,"children":["$","path",null,{"d":"M.5 56V.5H72","fill":"none"}]}]}],["$","rect",null,{"width":"100%","height":"100%","strokeWidth":0,"fill":"url(#_S_2_)"}],["$","svg",null,{"x":-12,"y":4,"className":"overflow-visible","children":[["$","rect","4-3",{"strokeWidth":"0","width":73,"height":57,"x":288,"y":168}],["$","rect","2-1",{"strokeWidth":"0","width":73,"height":57,"x":144,"y":56}],["$","rect","7-3",{"strokeWidth":"0","width":73,"height":57,"x":504,"y":168}],["$","rect","10-6",{"strokeWidth":"0","width":73,"height":57,"x":720,"y":336}]]}]]}]}],["$","svg",null,{"viewBox":"0 0 1113 440","aria-hidden":"true","className":"absolute top-0 left-1/2 -ml-76 w-278.25 fill-white blur-[26px] dark:hidden","children":["$","path",null,{"d":"M.016 439.5s-9.5-300 434-300S882.516 20 882.516 20V0h230.004v439.5H.016Z"}]}]]}]}],["$","div",null,{"className":"mx-auto flex h-full max-w-xl flex-col items-center justify-center py-16 text-center","children":[["$","p",null,{"className":"text-sm font-semibold text-zinc-900 dark:text-white","children":"404"}],["$","h1",null,{"className":"mt-2 text-2xl font-bold text-zinc-900 dark:text-white","children":"Page not found"}],["$","p",null,{"className":"mt-2 text-base text-zinc-600 dark:text-zinc-400","children":"Sorry, we couldn’t find the page you’re looking for."}],["$","$L35",null,{"className":"inline-flex gap-0.5 justify-center overflow-hidden text-sm font-medium transition rounded-full bg-zinc-900 py-1 px-3 text-white hover:bg-zinc-700 dark:bg-emerald-400/10 dark:text-emerald-400 dark:ring-1 dark:ring-inset dark:ring-emerald-400/20 dark:hover:bg-emerald-400/10 dark:hover:text-emerald-300 dark:hover:ring-emerald-300 mt-8","href":"/","children":[false,"Back to docs",["$","svg",null,{"viewBox":"0 0 20 20","fill":"none","aria-hidden":"true","className":"mt-0.5 h-5 w-5 -mr-1","children":["$","path",null,{"stroke":"currentColor","strokeLinecap":"round","strokeLinejoin":"round","d":"m11.5 6.5 3 3.5m0 0-3 3.5m3-3.5h-9"}]}]]}]]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]
